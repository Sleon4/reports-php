<!DOCTYPE html>
<html class="vh-100">
<head>
    <title>Console Web Â· Lion-Framework</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    {# assets #}
    <link rel="stylesheet" type="text/css" href="{{ host }}/app/assets/index.css">
    {# bootstrap 5.3 #}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="
    sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    {# xterm #}
    <link href="https://cdn.jsdelivr.net/npm/xterm@5.2.1/css/xterm.min.css" rel="stylesheet">
</head>
<body class="bg-dark-web h-100">
    {% include 'extends/content.twig' %}

    {# axios #}
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    {# bootstrap 5.3 #}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>
    {# xterm #}
    <script src="https://cdn.jsdelivr.net/npm/xterm@5.2.1/lib/xterm.min.js"></script>
    {# assets #}
    <script type="text/javascript">
        const commandInput = document.getElementById('command-input');
        const term = new Terminal({ cols: 200, rows: 30 });
        term.open(document.getElementById('terminal-output'));

        const appendOutput = (command, output) => {
            term.writeln(`> \x1b[38;5;81mroot $\x1b[0m \x1b[32m${command}\x1b[0m`);

            output
                .filter((out) => !["", null].includes(out))
                .forEach((out) => term.writeln(out));

            const terminalOutput = document.getElementById('terminal-output');
            terminalOutput.scrollTop = terminalOutput.scrollHeight;
        }

        const handleGit = () => {
            const command = "git branch --show-current";
            const form = new FormData();
            form.append("command", command);

            axios.post("{{ host }}/Git.php", form, {
                headers: {
                    "content-Type": "multipart/form-data"
                }
            }).then(res => {
                // console.log(res.data)
                document.getElementById("git-branch").innerHTML = `
                    <span class='text-blue'>root<span>
                    <span class='text-yellow'> git( <span class='text-rose'>${res.data}</span>)</span>
                    <span class='text-orange'> $</span>
                `;
            });
        };

        const handleCommand = () => {
            const form = new FormData();
            form.append("command", commandInput.value.trim());

            axios.post("{{ host }}/http.php", form, {
                headers: {
                    "content-Type": "multipart/form-data"
                }
            }).then(res => {
                commandInput.disabled = true;
                // console.log(res.data)
                appendOutput(
                    commandInput.value
                        .replace("php", "\x1b[33mphp\x1b[0m")
                        .replace("git", "\x1b[33mgit\x1b[0m")
                        .replace("composer", "\x1b[33mcomposer\x1b[0m")
                        .trim(),
                    res.data
                );

                commandInput.value = "php lion ";
                commandInput.autofocus = true;
                commandInput.disabled = false;
            });
        };

        document.getElementById("form-terminal").addEventListener("submit", (e) => {
            e.preventDefault();

            if (["cls", "clear"].includes(commandInput.value.trim())) {
                commandInput.value = "";
                term.clear();
                return false;
            }

            if (![null, ""].includes(commandInput.value.trim())) {
                handleCommand();
                handleGit();
            }
        });

        handleGit();
    </script>
</body>
</html>
